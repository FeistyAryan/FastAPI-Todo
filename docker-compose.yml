services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build: .
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    command: ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "app.main:app", "-b", "0.0.0.0:8000"]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  prometheus:
    image: prom/prometheus:v2.47.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - api
  grafana:
    image: grafana/grafana:10.1.1
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    depends_on:
      - prometheus
  rabbitmq:
    image: rabbitmq:4.1.3-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  worker:
    build: .
    volumes:
      - .:/code
    command: ["python", "worker.py"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./.env
  redis:
    image: redis:8.2.1-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", ping]
      interval: 10s
      timeout: 5s
      retries: 5
  
volumes:
  postgres_data: